<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.25.4963.10126" Name="CudafyMulti" DebugInfo="false" HasCudaSourceCode="false" HasPTX="true" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES>
    <PTXMODULE Platform="x64" Arch="sm_13" SourceCodeFile="4c190c95-1357-4cb2-9ef8-eccb50659967"></PTXMODULE>
  </PTXMODULES>
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="4c190c95-1357-4cb2-9ef8-eccb50659967" Language="Cuda" Arch="sm_13">DQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgTGFwbGFjZVNvbHZlciggZG91YmxlKiBwcmV2LCBpbnQgcHJldkxlbjAsICBkb3VibGUqIG5leHQsIGludCBuZXh0TGVuMCwgIGludCogc2l6ZXMsIGludCBzaXplc0xlbjAsICBpbnQqIGV4dFYsIGludCBleHRWTGVuMCwgIGludCogaW50ViwgaW50IGludFZMZW4wLCAgZG91YmxlKiB3LCBpbnQgd0xlbjApOw0KLy8gTXlDdWRhZnkuQ3VkYWZ5TXVsdGkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIENvcHkoIGRvdWJsZSogcHJldiwgaW50IHByZXZMZW4wLCAgZG91YmxlKiBuZXh0LCBpbnQgbmV4dExlbjApOw0KLy8gTXlDdWRhZnkuQ3VkYWZ5TXVsdGkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIFNxdWFyZSggZG91YmxlKiBwcmV2LCBpbnQgcHJldkxlbjAsICBkb3VibGUqIG5leHQsIGludCBuZXh0TGVuMCwgIGRvdWJsZSogZGVsdGEsIGludCBkZWx0YUxlbjApOw0KLy8gTXlDdWRhZnkuQ3VkYWZ5TXVsdGkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIERlbHRhKCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wLCAgZG91YmxlKiBkZWx0YSwgaW50IGRlbHRhTGVuMCk7DQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgTWF4KCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wKTsNCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBTdW0oIGRvdWJsZSogcHJldiwgaW50IHByZXZMZW4wLCAgZG91YmxlKiBuZXh0LCBpbnQgbmV4dExlbjApOw0KDQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KX19jb25zdGFudF9fIGRvdWJsZSBfYVsxMDBdOw0KI2RlZmluZSBfYUxlbjAgMTAwDQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KX19jb25zdGFudF9fIGRvdWJsZSBfYlsxXTsNCiNkZWZpbmUgX2JMZW4wIDENCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpfX2NvbnN0YW50X18gaW50IF9zaXplc1syXTsNCiNkZWZpbmUgX3NpemVzTGVuMCAyDQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KX19jb25zdGFudF9fIGRvdWJsZSBfbGVuZ3Roc1syXTsNCiNkZWZpbmUgX2xlbmd0aHNMZW4wIDINCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpfX2NvbnN0YW50X18gaW50IF9pbnRWWzNdOw0KI2RlZmluZSBfaW50VkxlbjAgMw0KLy8gTXlDdWRhZnkuQ3VkYWZ5TXVsdGkNCl9fY29uc3RhbnRfXyBpbnQgX2V4dFZbM107DQojZGVmaW5lIF9leHRWTGVuMCAzDQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KX19jb25zdGFudF9fIGRvdWJsZSBfd1szXTsNCiNkZWZpbmUgX3dMZW4wIDMNCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBMYXBsYWNlU29sdmVyKCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wLCAgaW50KiBzaXplcywgaW50IHNpemVzTGVuMCwgIGludCogZXh0ViwgaW50IGV4dFZMZW4wLCAgaW50KiBpbnRWLCBpbnQgaW50VkxlbjAsICBkb3VibGUqIHcsIGludCB3TGVuMCkNCnsNCglmb3IgKGludCBpID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgaSA8IGludFZbKHNpemVzTGVuMCldOyBpICs9IGJsb2NrRGltLnggKiBncmlkRGltLngpDQoJew0KCQlpbnQgbnVtID0gMDsNCgkJaW50IGogPSAwOw0KCQlpbnQgbnVtMiA9IGk7DQoJCXdoaWxlIChqIDwgc2l6ZXNMZW4wKQ0KCQl7DQoJCQludW0gKz0gKDEgKyBudW0yICUgKHNpemVzWyhqKV0gLSAyKSkgKiBleHRWWyhqKV07DQoJCQludW0yIC89IHNpemVzWyhqKV0gLSAyOw0KCQkJaisrOw0KCQl9DQoJCWRvdWJsZSBudW0zID0gcHJldlsobnVtKV0gKiB3WyhzaXplc0xlbjApXTsNCgkJZm9yIChpbnQgayA9IDA7IGsgPCBzaXplc0xlbjA7IGsrKykNCgkJew0KCQkJbnVtMyArPSAocHJldlsobnVtIC0gZXh0VlsoayldKV0gKyBwcmV2WyhudW0gKyBleHRWWyhrKV0pXSkgKiB3WyhrKV07DQoJCX0NCgkJbmV4dFsobnVtKV0gPSBudW0zOw0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBDb3B5KCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wKQ0Kew0KCWZvciAoaW50IGkgPSBibG9ja0RpbS54ICogYmxvY2tJZHgueCArIHRocmVhZElkeC54OyBpIDwgcHJldkxlbjA7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgl7DQoJCW5leHRbKGkpXSA9IHByZXZbKGkpXTsNCgl9DQp9DQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgU3F1YXJlKCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wLCAgZG91YmxlKiBkZWx0YSwgaW50IGRlbHRhTGVuMCkNCnsNCglmb3IgKGludCBpID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgaSA8IHByZXZMZW4wOyBpICs9IGJsb2NrRGltLnggKiBncmlkRGltLngpDQoJew0KCQlkb3VibGUgbnVtID0gbmV4dFsoaSldOw0KCQludW0gKj0gbnVtOw0KCQlkZWx0YVsoaSldID0gbnVtOw0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBEZWx0YSggZG91YmxlKiBwcmV2LCBpbnQgcHJldkxlbjAsICBkb3VibGUqIG5leHQsIGludCBuZXh0TGVuMCwgIGRvdWJsZSogZGVsdGEsIGludCBkZWx0YUxlbjApDQp7DQoJZm9yIChpbnQgaSA9IGJsb2NrRGltLnggKiBibG9ja0lkeC54ICsgdGhyZWFkSWR4Lng7IGkgPCBwcmV2TGVuMDsgaSArPSBibG9ja0RpbS54ICogZ3JpZERpbS54KQ0KCXsNCgkJZG91YmxlIG51bSA9IG5leHRbKGkpXSAqIChwcmV2WyhpKV0gLSBuZXh0WyhpKV0pOw0KCQludW0gKj0gbnVtOw0KCQlkZWx0YVsoaSldID0gbnVtOw0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeU11bHRpDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBNYXgoIGRvdWJsZSogcHJldiwgaW50IHByZXZMZW4wLCAgZG91YmxlKiBuZXh0LCBpbnQgbmV4dExlbjApDQp7DQoJZm9yIChpbnQgaSA9IGJsb2NrRGltLnggKiBibG9ja0lkeC54ICsgdGhyZWFkSWR4Lng7IGkgPCBuZXh0TGVuMDsgaSArPSBibG9ja0RpbS54ICogZ3JpZERpbS54KQ0KCXsNCgkJbmV4dFsoaSldID0gMC4wOw0KCQlpbnQgbnVtID0gMDsNCgkJd2hpbGUgKG51bSAqIG5leHRMZW4wICsgaSA8IHByZXZMZW4wKQ0KCQl7DQoJCQlpbnQgbnVtMiA9IG51bSAqIG5leHRMZW4wICsgaTsNCgkJCWlmIChwcmV2WyhudW0yKV0gPiBuZXh0WyhpKV0pDQoJCQl7DQoJCQkJbmV4dFsoaSldID0gcHJldlsobnVtMildOw0KCQkJfQ0KCQkJbnVtKys7DQoJCX0NCgl9DQp9DQovLyBNeUN1ZGFmeS5DdWRhZnlNdWx0aQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgU3VtKCBkb3VibGUqIHByZXYsIGludCBwcmV2TGVuMCwgIGRvdWJsZSogbmV4dCwgaW50IG5leHRMZW4wKQ0Kew0KCWZvciAoaW50IGkgPSBibG9ja0RpbS54ICogYmxvY2tJZHgueCArIHRocmVhZElkeC54OyBpIDwgbmV4dExlbjA7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgl7DQoJCW5leHRbKGkpXSA9IDAuMDsNCgkJaW50IG51bSA9IDA7DQoJCXdoaWxlIChudW0gKiBuZXh0TGVuMCArIGkgPCBwcmV2TGVuMCkNCgkJew0KCQkJaW50IG51bTIgPSBudW0gKiBuZXh0TGVuMCArIGk7DQoJCQluZXh0WyhpKV0gKz0gcHJldlsobnVtMildOw0KCQkJbnVtKys7DQoJCX0NCgl9DQp9DQo=</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="LaplaceSolver" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Int32[]" Name="sizes" Position="3" />
        <Parameter Type="System.Int32[]" Name="extV" Position="4" />
        <Parameter Type="System.Int32[]" Name="intV" Position="5" />
        <Parameter Type="System.Double[]" Name="w" Position="6" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Copy" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Square" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Double[]" Name="delta" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Delta" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Double[]" Name="delta" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Max" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Sum" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants>
    <CudafyConstantInfo Name="_a" FieldName="_a" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_b" FieldName="_b" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_sizes" FieldName="_sizes" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_lengths" FieldName="_lengths" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_intV" FieldName="_intV" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_extV" FieldName="_extV" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_w" FieldName="_w" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>775163275</Checksum>
    </CudafyConstantInfo>
  </Constants>
  <Types />
</CudafyModule>