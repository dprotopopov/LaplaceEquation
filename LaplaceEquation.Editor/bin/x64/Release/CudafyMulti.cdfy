<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.25.4963.10126" Name="CudafyMulti" DebugInfo="false" HasCudaSourceCode="false" HasPTX="true" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES>
    <PTXMODULE Platform="x64" Arch="sm_13" SourceCodeFile="90ff9d1e-ed27-404a-901e-ec3fd5087df7"></PTXMODULE>
  </PTXMODULES>
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="90ff9d1e-ed27-404a-901e-ec3fd5087df7" Language="Cuda" Arch="sm_13"></SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="LaplaceSolver" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Int32[]" Name="sizes" Position="3" />
        <Parameter Type="System.Int32[]" Name="extV" Position="4" />
        <Parameter Type="System.Int32[]" Name="intV" Position="5" />
        <Parameter Type="System.Double[]" Name="w" Position="6" />
        <Parameter Type="System.Double[]" Name="b" Position="7" />
        <Parameter Type="System.Double[]" Name="c" Position="8" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="LaplaceSolverWithRelax" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="array" Position="1" />
        <Parameter Type="System.Int32[]" Name="sizes" Position="2" />
        <Parameter Type="System.Int32[]" Name="extV" Position="3" />
        <Parameter Type="System.Int32[]" Name="intV" Position="4" />
        <Parameter Type="System.Double[]" Name="w" Position="5" />
        <Parameter Type="System.Double[]" Name="b" Position="6" />
        <Parameter Type="System.Double[]" Name="c" Position="7" />
        <Parameter Type="System.Int32" Name="p" Position="8" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Copy" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Clear" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="array" Position="1" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Square" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Double[]" Name="delta" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Delta" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
        <Parameter Type="System.Double[]" Name="delta" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Max" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Sum" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Double[]" Name="prev" Position="1" />
        <Parameter Type="System.Double[]" Name="next" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants>
    <CudafyConstantInfo Name="_a" FieldName="_a" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_b" FieldName="_b" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_c" FieldName="_c" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_sizes" FieldName="_sizes" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_lengths" FieldName="_lengths" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_intV" FieldName="_intV" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_extV" FieldName="_extV" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_w" FieldName="_w" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyMulti</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\LaplaceEquation\LaplaceEquation.Editor\bin\x64\Release\MyCudafy.dll</AssemblyPath>
      <Checksum>406065052</Checksum>
    </CudafyConstantInfo>
  </Constants>
  <Types />
</CudafyModule>